/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

// Import Routes

import { Route as rootRoute } from './routes/__root'
import { Route as CreateContactImport } from './routes/create-contact'
import { Route as IndexImport } from './routes/index'
import { Route as ContactIdImport } from './routes/contact.$id'
import { Route as ContactsContactsIndexImport } from './routes/contacts/contacts/index'
import { Route as ContactIdEditImport } from './routes/contact_.$id.edit'

// Create/Update Routes

const CreateContactRoute = CreateContactImport.update({
  id: '/create-contact',
  path: '/create-contact',
  getParentRoute: () => rootRoute,
} as any)

const IndexRoute = IndexImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => rootRoute,
} as any)

const ContactIdRoute = ContactIdImport.update({
  id: '/contact/$id',
  path: '/contact/$id',
  getParentRoute: () => rootRoute,
} as any)

const ContactsContactsIndexRoute = ContactsContactsIndexImport.update({
  id: '/contacts/contacts/',
  path: '/contacts/contacts/',
  getParentRoute: () => rootRoute,
} as any)

const ContactIdEditRoute = ContactIdEditImport.update({
  id: '/contact_/$id/edit',
  path: '/contact/$id/edit',
  getParentRoute: () => rootRoute,
} as any)

// Populate the FileRoutesByPath interface

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/': {
      id: '/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof IndexImport
      parentRoute: typeof rootRoute
    }
    '/create-contact': {
      id: '/create-contact'
      path: '/create-contact'
      fullPath: '/create-contact'
      preLoaderRoute: typeof CreateContactImport
      parentRoute: typeof rootRoute
    }
    '/contact/$id': {
      id: '/contact/$id'
      path: '/contact/$id'
      fullPath: '/contact/$id'
      preLoaderRoute: typeof ContactIdImport
      parentRoute: typeof rootRoute
    }
    '/contact_/$id/edit': {
      id: '/contact_/$id/edit'
      path: '/contact/$id/edit'
      fullPath: '/contact/$id/edit'
      preLoaderRoute: typeof ContactIdEditImport
      parentRoute: typeof rootRoute
    }
    '/contacts/contacts/': {
      id: '/contacts/contacts/'
      path: '/contacts/contacts'
      fullPath: '/contacts/contacts'
      preLoaderRoute: typeof ContactsContactsIndexImport
      parentRoute: typeof rootRoute
    }
  }
}

// Create and export the route tree

export interface FileRoutesByFullPath {
  '/': typeof IndexRoute
  '/create-contact': typeof CreateContactRoute
  '/contact/$id': typeof ContactIdRoute
  '/contact/$id/edit': typeof ContactIdEditRoute
  '/contacts/contacts': typeof ContactsContactsIndexRoute
}

export interface FileRoutesByTo {
  '/': typeof IndexRoute
  '/create-contact': typeof CreateContactRoute
  '/contact/$id': typeof ContactIdRoute
  '/contact/$id/edit': typeof ContactIdEditRoute
  '/contacts/contacts': typeof ContactsContactsIndexRoute
}

export interface FileRoutesById {
  __root__: typeof rootRoute
  '/': typeof IndexRoute
  '/create-contact': typeof CreateContactRoute
  '/contact/$id': typeof ContactIdRoute
  '/contact_/$id/edit': typeof ContactIdEditRoute
  '/contacts/contacts/': typeof ContactsContactsIndexRoute
}

export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths:
    | '/'
    | '/create-contact'
    | '/contact/$id'
    | '/contact/$id/edit'
    | '/contacts/contacts'
  fileRoutesByTo: FileRoutesByTo
  to:
    | '/'
    | '/create-contact'
    | '/contact/$id'
    | '/contact/$id/edit'
    | '/contacts/contacts'
  id:
    | '__root__'
    | '/'
    | '/create-contact'
    | '/contact/$id'
    | '/contact_/$id/edit'
    | '/contacts/contacts/'
  fileRoutesById: FileRoutesById
}

export interface RootRouteChildren {
  IndexRoute: typeof IndexRoute
  CreateContactRoute: typeof CreateContactRoute
  ContactIdRoute: typeof ContactIdRoute
  ContactIdEditRoute: typeof ContactIdEditRoute
  ContactsContactsIndexRoute: typeof ContactsContactsIndexRoute
}

const rootRouteChildren: RootRouteChildren = {
  IndexRoute: IndexRoute,
  CreateContactRoute: CreateContactRoute,
  ContactIdRoute: ContactIdRoute,
  ContactIdEditRoute: ContactIdEditRoute,
  ContactsContactsIndexRoute: ContactsContactsIndexRoute,
}

export const routeTree = rootRoute
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()

/* ROUTE_MANIFEST_START
{
  "routes": {
    "__root__": {
      "filePath": "__root.tsx",
      "children": [
        "/",
        "/create-contact",
        "/contact/$id",
        "/contact_/$id/edit",
        "/contacts/contacts/"
      ]
    },
    "/": {
      "filePath": "index.tsx"
    },
    "/create-contact": {
      "filePath": "create-contact.tsx"
    },
    "/contact/$id": {
      "filePath": "contact.$id.tsx"
    },
    "/contact_/$id/edit": {
      "filePath": "contact_.$id.edit.tsx"
    },
    "/contacts/contacts/": {
      "filePath": "contacts/contacts/index.tsx"
    }
  }
}
ROUTE_MANIFEST_END */
